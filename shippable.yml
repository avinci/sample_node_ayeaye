# Language setting
language: node_js

branches:
  only:
    - master

env:
  global:
    - REPO=sample_node_ayeaye
    - GOOGLE_GCR_URL=gcr.io/shipbeta # gcr.io/{project name}
    - TEST_RESULTS_DIR=$SHIPPABLE_REPO_DIR/shippable/testresults
    - CODE_COVERAGE_DIR=$SHIPPABLE_REPO_DIR/shippable/codecoverage
    - TESTS_LOC_DIR=$SHIPPABLE_REPO_DIR/tests
    - MOD_LOC=$SHIPPABLE_REPO_DIR/node_modules/.bin/
  matrix:
    - TEST_FILE=index.spec.js
    - TEST_FILE=name.spec.js

build:
  ci:
    - npm install
    #- npm test
    #- npm run coverage
    - mkdir -p $TEST_RESULTS_DIR && mkdir -p $CODE_COVERAGE_DIR
    - pushd $TESTS_LOC_DIR
    - $MOD_LOC/mocha $TEST_FILE -R mocha-junit-reporter --reporter-options mochaFile=$TEST_RESULTS_DIR/testresults.xml
    - $MOD_LOC/istanbul cover _mocha $TEST_FILE
    - $MOD_LOC/istanbul report cobertura --dir $CODE_COVERAGE_DIR
    - ls -al $TEST_RESULTS_DIR
    - ls -al $CODE_COVERAGE_DIR

  post_ci:
    #- docker build -t $GOOGLE_GCR_URL/$REPO:$BRANCH.$BUILD_NUMBER .

    # Push to GCR.io
    #- docker push $GOOGLE_GCR_URL/$REPO:$BRANCH.$BUILD_NUMBER

integrations:
  hub:
    - integrationName: avi-beta-gcr
      type: gcr

  notifications:
    - integrationName: sample-gcr-trig
      type: webhook
      payload:
        - versionName=$BRANCH.$BUILD_NUMBER
      branches:
        only:
          - master
      on_success: always
      on_failure: never
      on_start: never
